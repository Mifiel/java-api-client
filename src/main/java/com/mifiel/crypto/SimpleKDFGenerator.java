package com.mifiel.crypto;

import org.bouncycastle.crypto.DerivationFunction;
import org.bouncycastle.crypto.DerivationParameters;
import org.bouncycastle.crypto.Digest;
import org.bouncycastle.crypto.params.KDFParameters;

public class SimpleKDFGenerator implements DerivationFunction {
	private Digest digest;
	private byte[] shared;
	private int hLen;

	/**
	 * @param digest
	 *            the digest to be used as the source of generated bytes
	 */
	public SimpleKDFGenerator(Digest digest) {
		this.digest = digest;
		this.hLen = digest.getDigestSize();
	}

	@Override
	public void init(DerivationParameters param) {
		if (param instanceof KDFParameters) {
			KDFParameters p = (KDFParameters) param;
			shared = p.getSharedSecret();

		} else {
			throw new IllegalArgumentException("KDF parameters required for generator");
		}
	}

	/**
	 * return the underlying digest.
	 */
	public Digest getDigest() {
		return digest;
	}

	/**
	 * Calculate Digest from shared keys
	 */
	public int generateBytes(byte[] out, int outOff, int len){
	    digest.update(shared, 0, shared.length);
	    digest.doFinal(out, 0);
	    return out.length;
	}

}
